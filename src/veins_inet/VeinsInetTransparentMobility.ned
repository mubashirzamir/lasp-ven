//
// Copyright (C) 2024 Jannusch Bigge <jannusch.bigge@tu-dresden.de>
//
// Documentation for these modules is at http://veins.car2x.org/
//
// SPDX-License-Identifier: GPL-2.0-or-later
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

//
// INET mobility module that transparently forwards the position and calls to the TraCIMobility module
// Module works somewhat like an attached mobility module with translation
//

package lasp_ven.veins_inet;

import inet.mobility.base.MobilityBase;

simple VeinsInetTransparentMobility extends MobilityBase
{
    parameters:
        @class(veins::VeinsInetTransparentMobility);
        @signal[mobilityStateChanged](type=inet::MobilityBase);
        bool initFromDisplayString = default(true); // do not change this to false
        
        // from inet attached mobility
        string mobilityModule;
        double offsetX @unit(m) = default(0m);
        double offsetY @unit(m) = default(0m);
        double offsetZ @unit(m) = default(0m);
        double offsetHeading @unit(deg) = default(0deg);
        double offsetElevation @unit(deg) = default(0deg);
        double offsetBank @unit(deg) = default(0deg);

}
